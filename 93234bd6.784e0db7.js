(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{135:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return m})),t.d(n,"default",(function(){return d}));var o=t(2),r=t(9),a=(t(0),t(182)),i={id:"docker",title:"Docker",sidebar_label:"Docker"},c={id:"docker",isDocsHomePage:!1,title:"Docker",description:"Basics",source:"@site/docs/docker.md",permalink:"/docs/docker",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/docker.md",sidebar_label:"Docker",sidebar:"someSidebar",previous:{title:"Cloud Server Setup",permalink:"/docs/cloud-server"},next:{title:"Shell",permalink:"/docs/shell"}},m=[{value:"Basics",id:"basics",children:[]},{value:"Video conversion",id:"video-conversion",children:[{value:"Links",id:"links",children:[]}]},{value:"Dockerfile",id:"dockerfile",children:[]},{value:"docker-compose commands",id:"docker-compose-commands",children:[]},{value:"Copy files from host to running container",id:"copy-files-from-host-to-running-container",children:[]},{value:"MongoDB backup &amp; restore",id:"mongodb-backup--restore",children:[]}],s={rightToc:m};function d(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"basics"},"Basics"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),'# Run a container\ndocker run -p 80:80 nginx\n\n# Run a container in detached mode with restart policy,\n# volume, network, port, environment variable & a name\ndocker run --name postgres-db --restart always \\\n    -v $PWD/data:/usr/data --net reverse-proxy \\\n    -p 5433:5432 \\\n    -e POSTGRES_PASSWORD=mysecretpassword -d postgres\n\n# List running containers\ndocker ps\n\n# List all containers (Running or Stopped)\ndocker ps -a\n\n# Remove untagged images\ndocker rmi -f $(docker images | grep "<none>" | awk "{print \\$3}")\n\n# Build Image\ndocker build -t mysticalaj/node-web-app -f prod/Dockerfile . # -t for tagname\n\n# List images\ndocker images\n\n# Check logs\ndocker logs <container id>\n\n# Run command inside running container\ndocker exec -it <container id> /bin/bash\n\n# Stop container\ndocker stop container_id\n\n# Remove stopped container\ndocker rm container_id\n\n# Remove image\ndocker image rm image_name\n\n# remove all stopped containers\ndocker rm $(docker ps --filter status=exited -q)\n\n# remove all containers\ndocker kill $(docker ps -aq)\ndocker rm $(docker ps -aq)\n\n# complete cleanup of unused docker resources\ndocker prune\n')),Object(a.b)("h2",{id:"video-conversion"},"Video conversion"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"# Convert high quality video to various formats\n<720>\ndocker run -v $PWD:/tmp jrottenberg/ffmpeg \\\n        -stats \\\n        -i /tmp/test.mp4 \\\n        -s hd720 -c:v libx264 -crf 23 -c:a aac -strict -2 /tmp/test_720.mp4\n<480>\ndocker run -v $PWD:/tmp jrottenberg/ffmpeg \\\n        -stats \\\n        -i /tmp/test.mp4 \\\n        -s hd480 -c:v libx264 -crf 23 -c:a aac -strict -2 /tmp/test_480.mp4\n\n# Convert Video to Audio\ndocker run -v $PWD:/tmp jrottenberg/ffmpeg \\\n        -stats \\\n        -i /tmp/test.mp4 \\\n        /tmp/test.mp3\n\n# Using Shaka Packager to create DASH content\ndocker run -v $PWD:/media -it --rm google/shaka-packager\n\npackager \\\n    'in=/media/test.mp4,stream=audio,init_segment=/media/output/audio/init.mp4,segment_template=/media/output/audio/$Number$.m4s' \\\n    'in=/media/test_720.mp4,stream=video,init_segment=/media/output/h264_720p/init.mp4,segment_template=/media/output/h264_720p/$Number$.m4s' \\\n    'in=/media/test_480.mp4,stream=video,init_segment=/media/output/h264_480p/init.mp4,segment_template=/media/output/h264_480p/$Number$.m4s' \\\n    --generate_static_live_mpd --mpd_output /media/output/test.mpd\npackager \\\n    in=/media/test.mp4,stream=audio,init_segment=/media/output/audio/init.mp4,segment_template=/media/output/audio/$Number$.m4s \\\n    --generate_static_live_mpd --mpd_output /media/output/test.mpd\n\n# Run python server\ncd output\npython -m http.server\n")),Object(a.b)("h3",{id:"links"},"Links"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Shaka Packager ",Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"https://google.github.io/shaka-packager/html/"}),"https://google.github.io/shaka-packager/html/")),Object(a.b)("li",{parentName:"ol"},"VideoJS Player ",Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"https://gist.github.com/ajaymore/093f9d415a80931636b4ca5dcced1478#file-index-html"}),"https://gist.github.com/ajaymore/093f9d415a80931636b4ca5dcced1478#file-index-html"))),Object(a.b)("h2",{id:"dockerfile"},"Dockerfile"),Object(a.b)("p",null,Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://docs.docker.com/engine/reference/builder/"}),"Documentation")),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"mkdir $(date +%Y-%m-%d_%H%M)")),Object(a.b)("h2",{id:"docker-compose-commands"},"docker-compose commands"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"sudo chown -R $USER:$USER . # Setting volume permissions\ndocker-compose build # also to rebuild\ndocker-compose up # Run all containers\ndocker-compose down\n")),Object(a.b)("h2",{id:"copy-files-from-host-to-running-container"},"Copy files from host to running container"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-bash"}),"docker cp foo.txt mycontainer:/foo.txt\ndocker cp mycontainer:/foo.txt foo.txt\n\n# Multiple files contained by the folder src can be copied into the target folder using:\n\ndocker cp src/. mycontainer:/target\ndocker cp mycontainer:/src/. target\n")),Object(a.b)("h2",{id:"mongodb-backup--restore"},"MongoDB backup & restore"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{}),"docker run -d -p 27018:27017 --name some-mongo \\\n    -e MONGO_INITDB_ROOT_USERNAME=mongoadmin \\\n    -e MONGO_INITDB_ROOT_PASSWORD=secret \\\n    mongo\n\n# Local docker instance mongodump\ndocker run --rm --link some-mongo -v $PWD/mongo-backup:/backup mongo \\\n bash -c 'mongodump --db programming -u mongoadmin -p secret --authenticationDatabase admin --out /backup --host some-mongo:27017'\n\n# Local docker instance mongorestore\ndocker run --rm --link some-mongo -v $PWD/mongo-backup:/backup mongo \\\n bash -c 'mongorestore --db programming_new -u mongoadmin -p secret --authenticationDatabase admin /backup/programming --host some-mongo:27017'\n\n# Remote instance mongodump\ndocker run --rm -v $PWD/mongo-backup:/backup mongo:4.2.5 \\\n bash -c 'mongodump --db programming_remote -u admin -p nREnSEovpWI7jvBZ --authenticationDatabase admin --out /backup --ssl --host inip-shard-00-00-ksqln.mongodb.net:27017,inip-shard-00-01-ksqln.mongodb.net:27017,inip-shard-00-02-ksqln.mongodb.net:27017'\n\n# Remote instance mongorestore\ndocker run --rm -v $PWD/mongo-backup:/backup mongo:4.2.5 \\\n    bash -c 'mongorestore --db programming_remote -u admin -p nREnSEovpWI7jvBZ --authenticationDatabase admin /backup/programming --ssl --host inip-shard-0/inip-shard-00-00-ksqln.mongodb.net:27017,inip-shard-00-01-ksqln.mongodb.net:27017,inip-shard-00-02-ksqln.mongodb.net:27017'\n")))}d.isMDXComponent=!0},182:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return b}));var o=t(0),r=t.n(o);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),d=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=d(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},l=r.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=m(e,["components","mdxType","originalType","parentName"]),p=d(t),l=o,b=p["".concat(i,".").concat(l)]||p[l]||u[l]||a;return t?r.a.createElement(b,c(c({ref:n},s),{},{components:t})):r.a.createElement(b,c({ref:n},s))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=l;var c={};for(var m in n)hasOwnProperty.call(n,m)&&(c[m]=n[m]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}l.displayName="MDXCreateElement"}}]);