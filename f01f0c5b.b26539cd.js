(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{160:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return l}));var s=t(1),r=t(9),a=(t(0),t(165)),o={id:"cloud-server",title:"Cloud Server Setup",sidebar_label:"Cloud Server"},c={id:"cloud-server",title:"Cloud Server Setup",description:"## Get SSH public Key",source:"@site/docs/cloud-server.md",permalink:"/docs/cloud-server",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/cloud-server.md",sidebar_label:"Cloud Server",sidebar:"someSidebar",next:{title:"Style Guide",permalink:"/docs/doc1"}},i=[{value:"Get SSH public Key",id:"get-ssh-public-key",children:[]},{value:"First time login after creating the server",id:"first-time-login-after-creating-the-server",children:[]},{value:"Future logins",id:"future-logins",children:[]},{value:"Firewall",id:"firewall",children:[]},{value:"TimeZone",id:"timezone",children:[]},{value:"Base packages",id:"base-packages",children:[]},{value:"Docker Installation",id:"docker-installation",children:[]},{value:"Docker Compose",id:"docker-compose",children:[]},{value:"Run applications with docker",id:"run-applications-with-docker",children:[]},{value:"File Copying TO &amp; FROM the server",id:"file-copying-to--from-the-server",children:[]}],d={rightToc:i};function l(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(s.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"get-ssh-public-key"},"Get SSH public Key"),Object(a.b)("pre",null,Object(a.b)("code",Object(s.a)({parentName:"pre"},{className:"language-bash"}),'ssh-keygen -t rsa -C "abc@xyz.com"\n')),Object(a.b)("h2",{id:"first-time-login-after-creating-the-server"},"First time login after creating the server"),Object(a.b)("pre",null,Object(a.b)("code",Object(s.a)({parentName:"pre"},{className:"language-bash"}),"ssh -i ~/.ssh/id_rsa root@ip_address\n\nadduser sammy\nusermod -aG sudo sammy\n\nsudo nano /etc/ssh/sshd_config\nPermitRootLogin no\nPasswordAuthentication no\n\nsu - sammy\nmkdir ~/.ssh\nchmod 700 ~/.ssh\nnano ~/.ssh/authorized_keys\nchmod 600 ~/.ssh/authorized_keys # Copy public key into this file\nsudo systemctl reload sshd.service\n\n## Important check access before exiting from your local terminal\nssh -i ~/.ssh/id_rsa sammy@ip_address\n")),Object(a.b)("h2",{id:"future-logins"},"Future logins"),Object(a.b)("pre",null,Object(a.b)("code",Object(s.a)({parentName:"pre"},{}),"ssh -i ~/.ssh/id_rsa sammy@ip_address\n")),Object(a.b)("h2",{id:"firewall"},"Firewall"),Object(a.b)("pre",null,Object(a.b)("code",Object(s.a)({parentName:"pre"},{className:"language-bash"}),"sudo apt-get install ufw\nsudo ufw status\n\nsudo nano /etc/default/ufw\nset > IPV6=yes\n\nsudo ufw disable\nsudo ufw enable\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\nsudo ufw allow ssh\nsudo ufw allow 22/tcp\nsudo ufw allow www\n\n# Specific port\nsudo ufw allow 3306\n")),Object(a.b)("h2",{id:"timezone"},"TimeZone"),Object(a.b)("pre",null,Object(a.b)("code",Object(s.a)({parentName:"pre"},{className:"language-bash"}),"date\nsudo dpkg-reconfigure tzdata\n")),Object(a.b)("h2",{id:"base-packages"},"Base packages"),Object(a.b)("pre",null,Object(a.b)("code",Object(s.a)({parentName:"pre"},{}),"sudo apt update && sudo apt dist-upgrade && sudo apt autoremove\nsudo apt -y install gcc make linux-headers-$(uname -r) dkms\nsudo apt install -y build-essential autoconf automake python-dev curl\n")),Object(a.b)("h2",{id:"docker-installation"},"Docker Installation"),Object(a.b)("p",null,Object(a.b)("a",Object(s.a)({parentName:"p"},{href:"https://docs.docker.com/install/linux/docker-ce/ubuntu/"}),"https://docs.docker.com/install/linux/docker-ce/ubuntu/")),Object(a.b)("pre",null,Object(a.b)("code",Object(s.a)({parentName:"pre"},{}),"sudo groupadd docker\nsudo usermod -aG docker $USER\nsu ${USER}\nid -nG\n")),Object(a.b)("h2",{id:"docker-compose"},"Docker Compose"),Object(a.b)("p",null,Object(a.b)("a",Object(s.a)({parentName:"p"},{href:"https://docs.docker.com/compose/install/"}),"https://docs.docker.com/compose/install/")),Object(a.b)("h2",{id:"run-applications-with-docker"},"Run applications with docker"),Object(a.b)("pre",null,Object(a.b)("code",Object(s.a)({parentName:"pre"},{}),"# Simple HTTP Server\ndocker run --name http-server -p 80:80 -d nginx\n\n# MySQL Database\ndocker run --name mysql-db -e MYSQL_ROOT_PASSWORD=my-secret-pw -p 3306:3306 --restart always -d mysql:5.7.29\ndocker run --name phpmyadmin -d --link mysql-db:db -p 4444:80 phpmyadmin/phpmyadmin\n\n# Install Wordpress\ndocker run --name wordpress-site \\\n --link mysql-db \\\n -p 80:80 \\\n -e WORDPRESS_DB_HOST=mysql-db \\\n -e WORDPRESS_DB_USER=root \\\n -e WORDPRESS_DB_PASSWORD=my-secret-pw \\\n -e WORDPRESS_DB_NAME=wordpress \\\n -e WORDPRESS_TABLE_PREFIX=wp_ \\\n -d wordpress\n")),Object(a.b)("h2",{id:"file-copying-to--from-the-server"},"File Copying TO & FROM the server"),Object(a.b)("pre",null,Object(a.b)("code",Object(s.a)({parentName:"pre"},{}),"# Local file TO the server\nscp -i ~/.ssh/test_cloud_rsa $PWD/christiann-koepke-EkL50nhEEoc-unsplash.jpg ubuntu@server-ip:/home/ubuntu/\n\n# Local file FROM the server\nscp -i ~/.ssh/test_cloud_rsa ubuntu@server-ip:/home/ubuntu/christiann-koepke-EkL50nhEEoc-unsplash.jpg $PWD/copy.jpg\n\n# Local folder TO the server\nscp -i ~/.ssh/test_cloud_rsa -r $PWD/image-folder ubuntu@server-ip:/home/ubuntu/image-folder\n\n# Local folder FROM the server\nscp -i ~/.ssh/test_cloud_rsa -r ubuntu@server-ip:/home/ubuntu/image-folder $PWD/image-folder-copy\n")))}l.isMDXComponent=!0}}]);